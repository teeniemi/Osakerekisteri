package osakerekisteri.test;
// Generated by ComTest BEGIN
import java.io.File;
import osakerekisteri.*;
import java.util.*;
import static org.junit.Assert.*;
import org.junit.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2021.04.29 13:23:25 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class TransaktiotTest {



  // Generated by ComTest BEGIN
  /** 
   * testReadFromFile65 
   * @throws StoreException when error
   */
  @Test
  public void testReadFromFile65() throws StoreException {    // Transaktiot: 65
    Osakkeet stocks = new Osakkeet(); 
    Osake aku1 = new Osake(), aku2 = new Osake(); 
    aku1.testi(); 
    aku2.testi(); 
    String hakemisto = "testikelmit"; 
    String tiedNimi = hakemisto+"/nimet"; 
    File ftied = new File(tiedNimi+".dat"); 
    File dir = new File(hakemisto); 
    dir.mkdir(); 
    ftied.delete(); 
    try {
    stocks.readFromFile(tiedNimi); 
    fail("Transaktiot: 79 Did not throw StoreException");
    } catch(StoreException _e_){ _e_.getMessage(); }
    stocks.add(aku1); 
    stocks.add(aku2); 
    stocks.save(); 
    stocks = new Osakkeet();  // Poistetaan vanhat luomalla uusi
    stocks.readFromFile(tiedNimi);  // johon ladataan tiedot tiedostosta.
    Iterator<Osake> i = stocks.iterator(); 
    assertEquals("From: Transaktiot line: 86", aku1.toString(), i.next().toString()); 
    assertEquals("From: Transaktiot line: 87", aku2.toString(), i.next().toString()); 
    assertEquals("From: Transaktiot line: 88", false, i.hasNext()); 
    stocks.add(aku2); 
    stocks.save(); 
    assertEquals("From: Transaktiot line: 91", true, ftied.delete()); 
    File fbak = new File(tiedNimi+".bak"); 
    assertEquals("From: Transaktiot line: 93", true, fbak.delete()); 
    assertEquals("From: Transaktiot line: 94", true, dir.delete()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testIterator206 */
  @Test
  public void testIterator206() {    // Transaktiot: 206
    Transaktiot transaktiot = new Transaktiot(); 
    Transaktio trans21 = new Transaktio(2); transaktiot.add(trans21); 
    Transaktio trans11 = new Transaktio(1); transaktiot.add(trans11); 
    Transaktio trans22 = new Transaktio(2); transaktiot.add(trans22); 
    Transaktio trans12 = new Transaktio(1); transaktiot.add(trans12); 
    Transaktio trans23 = new Transaktio(2); transaktiot.add(trans23); 
    Iterator<Transaktio> i2=transaktiot.iterator(); 
    assertEquals("From: Transaktiot line: 218", trans21, i2.next()); 
    assertEquals("From: Transaktiot line: 219", trans11, i2.next()); 
    assertEquals("From: Transaktiot line: 220", trans22, i2.next()); 
    assertEquals("From: Transaktiot line: 221", trans12, i2.next()); 
    assertEquals("From: Transaktiot line: 222", trans23, i2.next()); 
    try {
    assertEquals("From: Transaktiot line: 223", trans12, i2.next()); 
    fail("Transaktiot: 223 Did not throw NoSuchElementException");
    } catch(NoSuchElementException _e_){ _e_.getMessage(); }
    int n = 0; 
    int jnrot[] = { 2,1,2,1,2} ; 
    for ( Transaktio trans:transaktiot ) {
    assertEquals("From: Transaktiot line: 229", jnrot[n], trans.getStockId()); n++; 
    }
    assertEquals("From: Transaktiot line: 232", 5, n); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGiveTransactions247 */
  @Test
  public void testGiveTransactions247() {    // Transaktiot: 247
    Transaktiot transaktiot = new Transaktiot(); 
    Transaktio trans21 = new Transaktio(2); transaktiot.add(trans21); 
    Transaktio trans11 = new Transaktio(1); transaktiot.add(trans11); 
    Transaktio trans22 = new Transaktio(2); transaktiot.add(trans22); 
    Transaktio trans12 = new Transaktio(1); transaktiot.add(trans12); 
    Transaktio trans23 = new Transaktio(2); transaktiot.add(trans23); 
    Transaktio trans51 = new Transaktio(5); transaktiot.add(trans51); 
    List<Transaktio> loytyneet; 
    loytyneet = transaktiot.giveTransactions(3); 
    assertEquals("From: Transaktiot line: 260", 0, loytyneet.size()); 
    loytyneet = transaktiot.giveTransactions(1); 
    assertEquals("From: Transaktiot line: 262", 2, loytyneet.size()); 
    assertEquals("From: Transaktiot line: 263", true, loytyneet.get(0) == trans11); 
    assertEquals("From: Transaktiot line: 264", true, loytyneet.get(1) == trans12); 
    loytyneet = transaktiot.giveTransactions(5); 
    assertEquals("From: Transaktiot line: 266", 1, loytyneet.size()); 
    assertEquals("From: Transaktiot line: 267", true, loytyneet.get(0) == trans51); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testDeleteStocksTransactions403 */
  @Test
  public void testDeleteStocksTransactions403() {    // Transaktiot: 403
    Transaktiot transactions = new Transaktiot(); 
    Transaktio pitsi21 = new Transaktio(); pitsi21.testi(2); 
    Transaktio pitsi11 = new Transaktio(); pitsi11.testi(1); 
    Transaktio pitsi22 = new Transaktio(); pitsi22.testi(2); 
    Transaktio pitsi12 = new Transaktio(); pitsi12.testi(1); 
    Transaktio pitsi23 = new Transaktio(); pitsi23.testi(2); 
    transactions.add(pitsi21); 
    transactions.add(pitsi11); 
    transactions.add(pitsi22); 
    transactions.add(pitsi12); 
    transactions.add(pitsi23); 
    assertEquals("From: Transaktiot line: 415", 3, transactions.deleteStocksTransactions(2)); assertEquals("From: Transaktiot line: 415", 2, transactions.getAmount()); 
    assertEquals("From: Transaktiot line: 416", 0, transactions.deleteStocksTransactions(3)); assertEquals("From: Transaktiot line: 416", 2, transactions.getAmount()); 
    List<Transaktio> h = transactions.giveTransactions(2); 
    assertEquals("From: Transaktiot line: 418", 0, h.size()); 
    h = transactions.giveTransactions(1); 
    assertEquals("From: Transaktiot line: 420", pitsi11, h.get(0)); 
    assertEquals("From: Transaktiot line: 421", pitsi12, h.get(1)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testDelete443 
   * @throws StoreException when error
   */
  @Test
  public void testDelete443() throws StoreException {    // Transaktiot: 443
    Transaktiot transactions = new Transaktiot(); 
    Transaktio pitsi21 = new Transaktio(); pitsi21.testi(2); 
    Transaktio pitsi11 = new Transaktio(); pitsi11.testi(1); 
    Transaktio pitsi22 = new Transaktio(); pitsi22.testi(2); 
    Transaktio pitsi12 = new Transaktio(); pitsi12.testi(1); 
    Transaktio pitsi23 = new Transaktio(); pitsi23.testi(2); 
    transactions.add(pitsi21); 
    transactions.add(pitsi11); 
    transactions.add(pitsi22); 
    transactions.add(pitsi12); 
    assertEquals("From: Transaktiot line: 456", false, transactions.delete(pitsi23)); assertEquals("From: Transaktiot line: 456", 4, transactions.getAmount()); 
    assertEquals("From: Transaktiot line: 457", true, transactions.delete(pitsi11)); assertEquals("From: Transaktiot line: 457", 3, transactions.getAmount()); 
    List<Transaktio> h = transactions.giveTransactions(1); 
    assertEquals("From: Transaktiot line: 459", 1, h.size()); 
    assertEquals("From: Transaktiot line: 460", pitsi12, h.get(0)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPoistaJasenenHarrastukset474 */
  @Test
  public void testPoistaJasenenHarrastukset474() {    // Transaktiot: 474
    Transaktiot transactions = new Transaktiot(); 
    Transaktio pitsi21 = new Transaktio(); pitsi21.testi(2); 
    Transaktio pitsi11 = new Transaktio(); pitsi11.testi(1); 
    Transaktio pitsi22 = new Transaktio(); pitsi22.testi(2); 
    Transaktio pitsi12 = new Transaktio(); pitsi12.testi(1); 
    Transaktio pitsi23 = new Transaktio(); pitsi23.testi(2); 
    transactions.add(pitsi21); 
    transactions.add(pitsi11); 
    transactions.add(pitsi22); 
    transactions.add(pitsi12); 
    transactions.add(pitsi23); 
    assertEquals("From: Transaktiot line: 486", 3, transactions.deleteStocksTransactions(2)); assertEquals("From: Transaktiot line: 486", 2, transactions.getAmount()); 
    assertEquals("From: Transaktiot line: 487", 0, transactions.deleteStocksTransactions(3)); assertEquals("From: Transaktiot line: 487", 2, transactions.getAmount()); 
    List<Transaktio> h = transactions.giveTransactions(2); 
    assertEquals("From: Transaktiot line: 489", 0, h.size()); 
    h = transactions.giveTransactions(1); 
    assertEquals("From: Transaktiot line: 491", pitsi11, h.get(0)); 
    assertEquals("From: Transaktiot line: 492", pitsi12, h.get(1)); 
  } // Generated by ComTest END
}