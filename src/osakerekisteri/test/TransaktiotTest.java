package osakerekisteri.test;
// Generated by ComTest BEGIN
import java.io.File;
import osakerekisteri.*;
import java.util.*;
import static org.junit.Assert.*;
import org.junit.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2021.05.07 17:24:26 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class TransaktiotTest {



  // Generated by ComTest BEGIN
  /** 
   * testReadFromFile64 
   * @throws StoreException when error
   */
  @Test
  public void testReadFromFile64() throws StoreException {    // Transaktiot: 64
    Osakkeet stocks = new Osakkeet(); 
    Osake stock1 = new Osake(), stock2 = new Osake(); 
    stock1.testi(1); 
    stock2.testi(2); 
    String hakemisto = "testikelmit"; 
    String tiedNimi = hakemisto+"/nimet"; 
    File ftied = new File(tiedNimi+".dat"); 
    File dir = new File(hakemisto); 
    dir.mkdir(); 
    ftied.delete(); 
    try {
    stocks.readFromFile(tiedNimi); 
    fail("Transaktiot: 78 Did not throw StoreException");
    } catch(StoreException _e_){ _e_.getMessage(); }
    stocks.add(stock1); 
    stocks.add(stock2); 
    stocks.save(); 
    stocks = new Osakkeet();  // Poistetaan vanhat luomalla uusi
    stocks.readFromFile(tiedNimi);  // johon ladataan tiedot tiedostosta.
    Iterator<Osake> i = stocks.iterator(); 
    assertEquals("From: Transaktiot line: 85", stock1.toString(), i.next().toString()); 
    assertEquals("From: Transaktiot line: 86", stock2.toString(), i.next().toString()); 
    assertEquals("From: Transaktiot line: 87", false, i.hasNext()); 
    stocks.add(stock2); 
    stocks.save(); 
    assertEquals("From: Transaktiot line: 90", true, ftied.delete()); 
    File fbak = new File(tiedNimi+".bak"); 
    assertEquals("From: Transaktiot line: 92", true, fbak.delete()); 
    assertEquals("From: Transaktiot line: 93", true, dir.delete()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testIterator203 */
  @Test
  public void testIterator203() {    // Transaktiot: 203
    Transaktiot transaktiot = new Transaktiot(); 
    Transaktio trans21 = new Transaktio(2); transaktiot.add(trans21); 
    Transaktio trans11 = new Transaktio(1); transaktiot.add(trans11); 
    Transaktio trans22 = new Transaktio(2); transaktiot.add(trans22); 
    Transaktio trans12 = new Transaktio(1); transaktiot.add(trans12); 
    Transaktio trans23 = new Transaktio(2); transaktiot.add(trans23); 
    Iterator<Transaktio> i2=transaktiot.iterator(); 
    assertEquals("From: Transaktiot line: 215", trans21, i2.next()); 
    assertEquals("From: Transaktiot line: 216", trans11, i2.next()); 
    assertEquals("From: Transaktiot line: 217", trans22, i2.next()); 
    assertEquals("From: Transaktiot line: 218", trans12, i2.next()); 
    assertEquals("From: Transaktiot line: 219", trans23, i2.next()); 
    try {
    assertEquals("From: Transaktiot line: 220", trans12, i2.next()); 
    fail("Transaktiot: 220 Did not throw NoSuchElementException");
    } catch(NoSuchElementException _e_){ _e_.getMessage(); }
    int n = 0; 
    int jnrot[] = { 2,1,2,1,2} ; 
    for ( Transaktio trans:transaktiot ) {
    assertEquals("From: Transaktiot line: 226", jnrot[n], trans.getStockId()); n++; 
    }
    assertEquals("From: Transaktiot line: 229", 5, n); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGiveTransactions244 */
  @Test
  public void testGiveTransactions244() {    // Transaktiot: 244
    Transaktiot transaktiot = new Transaktiot(); 
    Transaktio trans21 = new Transaktio(2); transaktiot.add(trans21); 
    Transaktio trans11 = new Transaktio(1); transaktiot.add(trans11); 
    Transaktio trans22 = new Transaktio(2); transaktiot.add(trans22); 
    Transaktio trans12 = new Transaktio(1); transaktiot.add(trans12); 
    Transaktio trans23 = new Transaktio(2); transaktiot.add(trans23); 
    Transaktio trans51 = new Transaktio(5); transaktiot.add(trans51); 
    List<Transaktio> loytyneet; 
    loytyneet = transaktiot.giveTransactions(3); 
    assertEquals("From: Transaktiot line: 257", 0, loytyneet.size()); 
    loytyneet = transaktiot.giveTransactions(1); 
    assertEquals("From: Transaktiot line: 259", 2, loytyneet.size()); 
    assertEquals("From: Transaktiot line: 260", true, loytyneet.get(0) == trans11); 
    assertEquals("From: Transaktiot line: 261", true, loytyneet.get(1) == trans12); 
    loytyneet = transaktiot.giveTransactions(5); 
    assertEquals("From: Transaktiot line: 263", 1, loytyneet.size()); 
    assertEquals("From: Transaktiot line: 264", true, loytyneet.get(0) == trans51); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testReplace279 
   * @throws CloneNotSupportedException when error
   */
  @Test
  public void testReplace279() throws CloneNotSupportedException {    // Transaktiot: 279
    Transaktiot transactions = new Transaktiot(); 
    Transaktio trans1 = new Transaktio(); 
    Transaktio trans2 = new Transaktio(); 
    trans1.parse("1|1|2007-11-30|\"\"|1.0|100|100.00|200.0|"); 
    trans2.parse("1|1|2007-11-30|\"\"|2.0|200|200.00|600.0|"); 
    transactions.add(trans1); 
    transactions.replace(trans2); 
    List<Transaktio> kikkeliskokkelis = transactions.giveTransactions(1); 
    assertEquals("From: Transaktiot line: 289", 1, kikkeliskokkelis.size()); 
    Iterator<Transaktio> it = kikkeliskokkelis.iterator(); 
    assertEquals("From: Transaktiot line: 291", trans2.toString(), it.next().toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetAverage346 */
  @Test
  public void testGetAverage346() {    // Transaktiot: 346
    Transaktiot transactions = new Transaktiot(); 
    Transaktio transaction = new Transaktio(); 
    transaction.parse("1|1|2007-11-30|\"\"|1.0|100|100.00|200.0|"); 
    Transaktio transaction2 = new Transaktio(); 
    transaction2.parse("1|1|2007-11-30|\"\"|2.0|200|200.00|600.0|"); 
    transactions.add(transaction); 
    transactions.add(transaction2); 
    assertEquals("From: Transaktiot line: 354", 1.5, transactions.getAverage(1), 0.000001); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetExpenses404 */
  @Test
  public void testGetExpenses404() {    // Transaktiot: 404
    Transaktiot transactions = new Transaktiot(); 
    Transaktio transaction = new Transaktio(); 
    transaction.parse("1|1|2007-11-30|\"\"|1.0|100|100.00|200.0|"); 
    Transaktio transaction2 = new Transaktio(); 
    transaction2.parse("1|1|2007-11-30|\"\"|2.0|200|200.00|600.0|"); 
    transactions.add(transaction); 
    transactions.add(transaction2); 
    assertEquals("From: Transaktiot line: 412", "300.0", transactions.getExpenses(1).toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetTotalPrice431 */
  @Test
  public void testGetTotalPrice431() {    // Transaktiot: 431
    Transaktiot transactions = new Transaktiot(); 
    Transaktio transaction = new Transaktio(); 
    transaction.parse("1|1|2007-11-30|\"\"|1.0|100|100.00|200.0|"); 
    Transaktio transaction2 = new Transaktio(); 
    transaction2.parse("1|1|2007-11-30|\"\"|2.0|200|200.00|600.0|"); 
    transactions.add(transaction); 
    transactions.add(transaction2); 
    assertEquals("From: Transaktiot line: 439", "800.0", transactions.getTotalPrice(1).toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testDeleteStocksTransactions457 */
  @Test
  public void testDeleteStocksTransactions457() {    // Transaktiot: 457
    Transaktiot transactions = new Transaktiot(); 
    Transaktio trans21 = new Transaktio(); trans21.testi(2); 
    Transaktio trans11 = new Transaktio(); trans11.testi(1); 
    Transaktio trans22 = new Transaktio(); trans22.testi(2); 
    Transaktio trans12 = new Transaktio(); trans12.testi(1); 
    Transaktio trans23 = new Transaktio(); trans23.testi(2); 
    transactions.add(trans21); 
    transactions.add(trans11); 
    transactions.add(trans22); 
    transactions.add(trans12); 
    transactions.add(trans23); 
    assertEquals("From: Transaktiot line: 469", 3, transactions.deleteStocksTransactions(2)); assertEquals("From: Transaktiot line: 469", 2, transactions.getAmount()); 
    assertEquals("From: Transaktiot line: 470", 0, transactions.deleteStocksTransactions(3)); assertEquals("From: Transaktiot line: 470", 2, transactions.getAmount()); 
    List<Transaktio> h = transactions.giveTransactions(2); 
    assertEquals("From: Transaktiot line: 472", 0, h.size()); 
    h = transactions.giveTransactions(1); 
    assertEquals("From: Transaktiot line: 474", trans11, h.get(0)); 
    assertEquals("From: Transaktiot line: 475", trans12, h.get(1)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testDelete497 
   * @throws StoreException when error
   */
  @Test
  public void testDelete497() throws StoreException {    // Transaktiot: 497
    Transaktiot transactions = new Transaktiot(); 
    Transaktio trans21 = new Transaktio(); trans21.testi(2); 
    Transaktio trans11 = new Transaktio(); trans11.testi(1); 
    Transaktio trans22 = new Transaktio(); trans22.testi(2); 
    Transaktio trans12 = new Transaktio(); trans12.testi(1); 
    Transaktio trans23 = new Transaktio(); trans23.testi(2); 
    transactions.add(trans21); 
    transactions.add(trans11); 
    transactions.add(trans22); 
    transactions.add(trans12); 
    assertEquals("From: Transaktiot line: 510", false, transactions.delete(trans23)); assertEquals("From: Transaktiot line: 510", 4, transactions.getAmount()); 
    assertEquals("From: Transaktiot line: 511", true, transactions.delete(trans11)); assertEquals("From: Transaktiot line: 511", 3, transactions.getAmount()); 
    List<Transaktio> h = transactions.giveTransactions(1); 
    assertEquals("From: Transaktiot line: 513", 1, h.size()); 
    assertEquals("From: Transaktiot line: 514", trans12, h.get(0)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testDeleteStockTransactions528 */
  @Test
  public void testDeleteStockTransactions528() {    // Transaktiot: 528
    Transaktiot transactions = new Transaktiot(); 
    Transaktio trans21 = new Transaktio(); trans21.testi(2); 
    Transaktio trans11 = new Transaktio(); trans11.testi(1); 
    Transaktio trans22 = new Transaktio(); trans22.testi(2); 
    Transaktio trans12 = new Transaktio(); trans12.testi(1); 
    Transaktio trans23 = new Transaktio(); trans23.testi(2); 
    transactions.add(trans21); 
    transactions.add(trans11); 
    transactions.add(trans22); 
    transactions.add(trans12); 
    transactions.add(trans23); 
    assertEquals("From: Transaktiot line: 540", 3, transactions.deleteStocksTransactions(2)); assertEquals("From: Transaktiot line: 540", 2, transactions.getAmount()); 
    assertEquals("From: Transaktiot line: 541", 0, transactions.deleteStocksTransactions(3)); assertEquals("From: Transaktiot line: 541", 2, transactions.getAmount()); 
    List<Transaktio> h = transactions.giveTransactions(2); 
    assertEquals("From: Transaktiot line: 543", 0, h.size()); 
    h = transactions.giveTransactions(1); 
    assertEquals("From: Transaktiot line: 545", trans11, h.get(0)); 
    assertEquals("From: Transaktiot line: 546", trans12, h.get(1)); 
  } // Generated by ComTest END
}