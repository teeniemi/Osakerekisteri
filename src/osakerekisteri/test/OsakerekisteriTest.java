package osakerekisteri.test;
// Generated by ComTest BEGIN
import java.io.*;
import java.util.*;
import static org.junit.Assert.*;
import org.junit.*;
import osakerekisteri.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2021.04.28 18:06:30 // Generated by ComTest
 *
 */
@SuppressWarnings("all")
public class OsakerekisteriTest {



  // Generated by ComTest BEGIN
  /** 
   * testAdd40 
   * @throws StoreException when error
   */
  @Test
  public void testAdd40() throws StoreException {    // Osakerekisteri: 40
    Osakerekisteri osakerekisteri = new Osakerekisteri(); 
    Osake stock1 = new Osake(), stock2 = new Osake(); 
    stock1.register(); stock2.register(); 
    assertEquals("From: Osakerekisteri line: 45", 0, osakerekisteri.getStocks()); 
    osakerekisteri.add(stock1); assertEquals("From: Osakerekisteri line: 46", 1, osakerekisteri.getStocks()); 
    osakerekisteri.add(stock2); assertEquals("From: Osakerekisteri line: 47", 2, osakerekisteri.getStocks()); 
    osakerekisteri.add(stock1); assertEquals("From: Osakerekisteri line: 48", 3, osakerekisteri.getStocks()); 
    assertEquals("From: Osakerekisteri line: 49", 3, osakerekisteri.getStocks()); 
    assertEquals("From: Osakerekisteri line: 50", stock1, osakerekisteri.giveStock(0)); 
    assertEquals("From: Osakerekisteri line: 51", stock2, osakerekisteri.giveStock(1)); 
    assertEquals("From: Osakerekisteri line: 52", stock1, osakerekisteri.giveStock(2)); 
    try {
    assertEquals("From: Osakerekisteri line: 53", stock1, osakerekisteri.giveStock(3)); 
    fail("Osakerekisteri: 53 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
    osakerekisteri.add(stock1); assertEquals("From: Osakerekisteri line: 54", 4, osakerekisteri.getStocks()); 
    osakerekisteri.add(stock1); assertEquals("From: Osakerekisteri line: 55", 5, osakerekisteri.getStocks()); 
    try {
    osakerekisteri.add(stock1); 
    fail("Osakerekisteri: 56 Did not throw StoreException");
    } catch(StoreException _e_){ _e_.getMessage(); }
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testReadFromFile117 
   * @throws SailoException when error
   */
  @Test
  public void testReadFromFile117() throws SailoException {    // Osakerekisteri: 117
    Osakerekisteri osakerekisteri = new Osakerekisteri(); 
    Osake stock1 = new Osake(); stock1.testi(); stock1.register(); 
    Osake stock2 = new Osake(); stock2.testi(); stock2.register(); 
    Transaktio trans21 = new Transaktio(); trans21.testi(stock2.getId()); 
    Transaktio trans11 = new Transaktio(); trans11.testi(stock1.getId()); 
    Transaktio trans22 = new Transaktio(); trans22.testi(stock2.getId()); 
    Transaktio trans12 = new Transaktio(); trans12.testi(stock1.getId()); 
    Transaktio trans23 = new Transaktio(); trans23.testi(stock2.getId()); 
    String hakemisto = "testikelmit"; 
    File dir = new File(hakemisto); 
    File ftied  = new File(hakemisto+"/nimet.dat"); 
    File fhtied = new File(hakemisto+"/harrastukset.dat"); 
    dir.mkdir(); 
    ftied.delete(); 
    fhtied.delete(); 
    try {
    osakerekisteri.readFromFile(hakemisto); 
    fail("Osakerekisteri: 139 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
    osakerekisteri.add(stock1); 
    osakerekisteri.add(stock2); 
    osakerekisteri.add(trans21); 
    osakerekisteri.add(trans11); 
    osakerekisteri.add(trans22); 
    osakerekisteri.add(trans12); 
    osakerekisteri.add(trans23); 
    osakerekisteri.tallenna(); 
    osakerekisteri = new Osakerekisteri(); 
    osakerekisteri.readFromFile(hakemisto); 
    Collection<Osake> kaikki = osakerekisteri.etsi("",-1); 
    Iterator<Osake> it = kaikki.iterator(); 
    assertEquals("From: Osakerekisteri line: 152", stock1, it.next()); 
    assertEquals("From: Osakerekisteri line: 153", stock2, it.next()); 
    assertEquals("From: Osakerekisteri line: 154", false, it.hasNext()); 
    List<Transaktio> loytyneet = osakerekisteri.giveTransactions(stock1); 
    Iterator<Transaktio> ih = loytyneet.iterator(); 
    assertEquals("From: Osakerekisteri line: 157", trans11, ih.next()); 
    assertEquals("From: Osakerekisteri line: 158", trans12, ih.next()); 
    assertEquals("From: Osakerekisteri line: 159", false, ih.hasNext()); 
    loytyneet = osakerekisteri.giveTransactions(stock2); 
    ih = loytyneet.iterator(); 
    assertEquals("From: Osakerekisteri line: 162", trans21, ih.next()); 
    assertEquals("From: Osakerekisteri line: 163", trans22, ih.next()); 
    assertEquals("From: Osakerekisteri line: 164", trans23, ih.next()); 
    assertEquals("From: Osakerekisteri line: 165", false, ih.hasNext()); 
    osakerekisteri.add(stock2); 
    osakerekisteri.add(trans23); 
    osakerekisteri.tallenna(); 
    assertEquals("From: Osakerekisteri line: 169", true, ftied.delete()); 
    assertEquals("From: Osakerekisteri line: 170", true, fhtied.delete()); 
    File fbak = new File(hakemisto+"/nimet.bak"); 
    File fhbak = new File(hakemisto+"/harrastukset.bak"); 
    assertEquals("From: Osakerekisteri line: 173", true, fbak.delete()); 
    assertEquals("From: Osakerekisteri line: 174", true, fhbak.delete()); 
    assertEquals("From: Osakerekisteri line: 175", true, dir.delete()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testDeleteTransaction348 
   * @throws Exception when error
   */
  @Test
  public void testDeleteTransaction348() throws Exception {    // Osakerekisteri: 348
    alustaOsakerekisteri(); 
    assertEquals("From: Osakerekisteri line: 351", 2, osakerekisteri.giveTransactions(stock1).size()); 
    osakerekisteri.poistaTransaktio(trans11); 
    assertEquals("From: Osakerekisteri line: 353", 1, osakerekisteri.giveTransactions(stock1).size()); 
  } // Generated by ComTest END
}