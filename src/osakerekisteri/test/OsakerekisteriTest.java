package osakerekisteri.test;
// Generated by ComTest BEGIN
import osakerekisteri.StoreException;
import java.io.*;
import java.util.*;
import static org.junit.Assert.*;
import org.junit.*;
import osakerekisteri.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2021.05.07 16:56:15 // Generated by ComTest
 *
 */
@SuppressWarnings("all")
public class OsakerekisteriTest {


  // Generated by ComTest BEGIN  // Osakerekisteri: 19
   private Osakerekisteri osakerekisteri; 
   private Osake stock1; 
   private Osake stock2; 
   private int jid1; 
   private int jid2; 
   private Transaktio trans21; 
   private Transaktio trans11; 
   private Transaktio trans22; 
   private Transaktio trans12; 
   private Transaktio trans23; 

   @SuppressWarnings("javadoc")
   public void alustaOsakerekisteri() {
   osakerekisteri = new Osakerekisteri(); 
   stock1 = new Osake(); stock1.testi(1); stock1.register(); 
   stock2 = new Osake(); stock2.testi(2); stock2.register(); 
   trans21 = new Transaktio(); trans21.testi(stock2.getId()); 
   trans11 = new Transaktio(); trans11.testi(stock1.getId()); 
   trans22 = new Transaktio(); trans22.testi(stock2.getId()); 
   trans12 = new Transaktio(); trans12.testi(stock1.getId()); 
   trans23 = new Transaktio(); trans23.testi(stock2.getId()); 
     try {
     osakerekisteri.add(stock1); 
     osakerekisteri.add(stock2); 
     osakerekisteri.add(trans21); 
     osakerekisteri.add(trans11); 
     osakerekisteri.add(trans22); 
     osakerekisteri.add(trans12); 
     osakerekisteri.add(trans23); 
     } catch ( Exception e) {
        System.err.println(e.getMessage()); 
     }
   }
  // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testAdd84 
   * @throws StoreException when error
   */
  @Test
  public void testAdd84() throws StoreException {    // Osakerekisteri: 84
    Osakerekisteri osakerekisteri = new Osakerekisteri(); 
    Osake stock1 = new Osake(), stock2 = new Osake(); 
    stock1.register(); stock2.register(); 
    assertEquals("From: Osakerekisteri line: 89", 0, osakerekisteri.getStocks()); 
    osakerekisteri.add(stock1); assertEquals("From: Osakerekisteri line: 90", 1, osakerekisteri.getStocks()); 
    osakerekisteri.add(stock2); assertEquals("From: Osakerekisteri line: 91", 2, osakerekisteri.getStocks()); 
    osakerekisteri.add(stock1); assertEquals("From: Osakerekisteri line: 92", 3, osakerekisteri.getStocks()); 
    assertEquals("From: Osakerekisteri line: 93", 3, osakerekisteri.getStocks()); 
    assertEquals("From: Osakerekisteri line: 94", stock1, osakerekisteri.giveStock(0)); 
    assertEquals("From: Osakerekisteri line: 95", stock2, osakerekisteri.giveStock(1)); 
    assertEquals("From: Osakerekisteri line: 96", stock1, osakerekisteri.giveStock(2)); 
    try {
    assertEquals("From: Osakerekisteri line: 97", stock1, osakerekisteri.giveStock(3)); 
    fail("Osakerekisteri: 97 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
    osakerekisteri.add(stock1); assertEquals("From: Osakerekisteri line: 98", 4, osakerekisteri.getStocks()); 
    osakerekisteri.add(stock1); assertEquals("From: Osakerekisteri line: 99", 5, osakerekisteri.getStocks()); 
    osakerekisteri.add(stock1); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testReadFromFile157 
   * @throws StoreException when error
   */
  @Test
  public void testReadFromFile157() throws StoreException {    // Osakerekisteri: 157
    osakerekisteri = new Osakerekisteri(); 
    String hakemisto = "testikelmit"; 
    File dir = new File(hakemisto); 
    File ftied  = new File(hakemisto+"/stocks.dat"); 
    File fhtied = new File(hakemisto+"/transactions.dat"); 
    dir.mkdir(); 
    ftied.delete(); 
    fhtied.delete(); 
    try {
    osakerekisteri.readFromFile(hakemisto); 
    fail("Osakerekisteri: 169 Did not throw StoreException");
    } catch(StoreException _e_){ _e_.getMessage(); }
    alustaOsakerekisteri(); 
    osakerekisteri.setTiedosto(hakemisto); 
    osakerekisteri.tallenna(); 
    osakerekisteri = new Osakerekisteri(); 
    osakerekisteri.readFromFile(hakemisto); 
    Collection<Osake> kaikki = osakerekisteri.etsi("",-1); 
    Iterator<Osake> it = kaikki.iterator(); 
    assertEquals("From: Osakerekisteri line: 177", stock1.toString(), it.next().toString()); 
    assertEquals("From: Osakerekisteri line: 178", stock2.toString(), it.next().toString()); 
    assertEquals("From: Osakerekisteri line: 179", false, it.hasNext()); 
    List<Transaktio> loytyneet = osakerekisteri.giveTransactions(stock1); 
    Iterator<Transaktio> ih = loytyneet.iterator(); 
    assertEquals("From: Osakerekisteri line: 182", trans11.toString(), ih.next().toString()); 
    assertEquals("From: Osakerekisteri line: 183", trans12.toString(), ih.next().toString()); 
    assertEquals("From: Osakerekisteri line: 184", false, ih.hasNext()); 
    loytyneet = osakerekisteri.giveTransactions(stock2); 
    ih = loytyneet.iterator(); 
    assertEquals("From: Osakerekisteri line: 187", trans21.toString(), ih.next().toString()); 
    assertEquals("From: Osakerekisteri line: 188", trans22.toString(), ih.next().toString()); 
    assertEquals("From: Osakerekisteri line: 189", trans23.toString(), ih.next().toString()); 
    assertEquals("From: Osakerekisteri line: 190", false, ih.hasNext()); 
    osakerekisteri.add(stock2); 
    osakerekisteri.add(trans23); 
    osakerekisteri.tallenna(); 
    assertEquals("From: Osakerekisteri line: 194", true, ftied.delete()); 
    assertEquals("From: Osakerekisteri line: 195", true, fhtied.delete()); 
    File fbak = new File(hakemisto+"/stocks.bak"); 
    File fhbak = new File(hakemisto+"/transactions.bak"); 
    assertEquals("From: Osakerekisteri line: 198", true, fbak.delete()); 
    assertEquals("From: Osakerekisteri line: 199", true, fhbak.delete()); 
    assertEquals("From: Osakerekisteri line: 200", true, dir.delete()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testDeleteStock357 
   * @throws Exception when error
   */
  @Test
  public void testDeleteStock357() throws Exception {    // Osakerekisteri: 357
    alustaOsakerekisteri(); 
    assertEquals("From: Osakerekisteri line: 360", stock1, osakerekisteri.giveStock(0)); 
    osakerekisteri.deleteStock(stock1); 
    assertEquals("From: Osakerekisteri line: 362", false, osakerekisteri.giveStock(0).equals(stock1)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testDeleteTransaction375 
   * @throws Exception when error
   */
  @Test
  public void testDeleteTransaction375() throws Exception {    // Osakerekisteri: 375
    alustaOsakerekisteri(); 
    assertEquals("From: Osakerekisteri line: 378", 2, osakerekisteri.giveTransactions(stock1).size()); 
    osakerekisteri.deleteTransaction(trans11); 
    assertEquals("From: Osakerekisteri line: 380", 1, osakerekisteri.giveTransactions(stock1).size()); 
  } // Generated by ComTest END
}